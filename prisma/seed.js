"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
require("dotenv/config");
var client_1 = require("@prisma/client");
var prisma = new client_1.PrismaClient();
// 戻り値の型を DepartureCreateManyInput[] に明示
function generateDepartures(dayType, direction, rows) {
    var mapDest = {
        犬: "犬山",
        岩: "岩倉",
        扶: "扶桑",
        浄: "浄心",
    };
    var defaultDest = direction === "UP" ? "上小田井" : "赤池";
    return Object.entries(rows).flatMap(function (_a) {
        var hourStr = _a[0], entries = _a[1];
        var hh = hourStr.padStart(2, "0");
        return entries.map(function (_a) {
            var _b, _c, _d;
            var mm = _a[0], mark = _a[1];
            var isExpress = (_b = mark === null || mark === void 0 ? void 0 : mark.startsWith("*")) !== null && _b !== void 0 ? _b : false;
            var key = (_c = mark === null || mark === void 0 ? void 0 : mark.replace("*", "")) !== null && _c !== void 0 ? _c : "";
            return {
                direction: direction,
                dayType: dayType,
                departureTime: "".concat(hh, ":").concat(mm),
                destination: key ? (_d = mapDest[key]) !== null && _d !== void 0 ? _d : defaultDest : defaultDest,
                note: isExpress ? "急行" : null,
            };
        });
    });
}
// 上り 平日 (WEEKDAY)
var upWeekday = {
    4: [],
    5: [["37"], ["49", "犬"], ["59"]],
    6: [
        ["07", "犬"],
        ["17"],
        ["25"],
        ["30", "*岩"],
        ["35", "*犬"],
        ["39"],
        ["44", "犬"],
        ["48"],
        ["53"],
        ["58"],
    ],
    7: [
        ["03", "*岩"],
        ["07"],
        ["12"],
        ["16", "岩"],
        ["21"],
        ["25", "*犬"],
        ["30"],
        ["34", "犬"],
        ["39"],
        ["43", "扶"],
        ["48"],
        ["52"],
        ["57"],
    ],
    8: [
        ["01"],
        ["06", "犬"],
        ["10"],
        ["15"],
        ["20"],
        ["25"],
        ["29"],
        ["34", "犬"],
        ["38"],
        ["43"],
        ["47", "岩"],
        ["53"],
        ["58"],
    ],
    9: [["04"], ["10"], ["16"], ["23"], ["29"], ["37"], ["44"], ["52"]],
    10: [["00"], ["08"], ["16"], ["25"], ["35"], ["45"], ["55"]],
    11: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    12: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    13: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    14: [["05"], ["15"], ["25"], ["35"], ["45"], ["54"]],
    15: [["03"], ["11"], ["19"], ["26"], ["32"], ["38"], ["44"], ["50"], ["56"]],
    16: [
        ["02"],
        ["08"],
        ["14"],
        ["20"],
        ["26", "岩"],
        ["32"],
        ["38"],
        ["44"],
        ["50"],
        ["56", "岩"],
    ],
    17: [
        ["02"],
        ["08"],
        ["14"],
        ["20"],
        ["26", "岩"],
        ["32"],
        ["38"],
        ["44"],
        ["50"],
        ["56", "岩"],
    ],
    18: [
        ["02"],
        ["08"],
        ["14"],
        ["20"],
        ["26", "岩"],
        ["32"],
        ["38"],
        ["44"],
        ["50"],
        ["56", "岩"],
    ],
    19: [
        ["02"],
        ["08"],
        ["14"],
        ["21"],
        ["27", "岩"],
        ["35"],
        ["42"],
        ["50"],
        ["58", "岩"],
    ],
    20: [["08"], ["18"], ["28"], ["38"], ["48"], ["58"]],
    21: [["08"], ["18"], ["28"], ["38"], ["50"]],
    22: [["01"], ["13"], ["24"], ["37", "岩"], ["50"]],
    23: [["01", "犬"], ["12"], ["24"], ["40"], ["55"]],
    0: [["06", "浄"]],
    1: [],
    2: [],
    3: [],
};
// 上り 土日祝 (HOLIDAY)
var upHoliday = {
    4: [["04"]],
    5: [["37"], ["49", "犬"]],
    6: [["00"], ["11", "犬"], ["22"], ["32", "岩"], ["42"], ["51", "犬"], ["59"]],
    7: [
        ["07", "犬"],
        ["15", "岩"],
        ["22"],
        ["30", "犬"],
        ["37"],
        ["45", "岩"],
        ["52"],
    ],
    8: [
        ["00", "犬"],
        ["07"],
        ["15", "岩"],
        ["22"],
        ["30"],
        ["37"],
        ["45", "岩"],
        ["52"],
    ],
    9: [["00"], ["08", "岩"], ["18"], ["28", "岩"], ["38"], ["48"], ["58"]],
    10: [["08"], ["18"], ["27"], ["36"], ["45"], ["55"]],
    11: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    12: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    13: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    14: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    15: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    16: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    17: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    18: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    19: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    20: [["05"], ["15"], ["25"], ["35"], ["45"], ["55"]],
    21: [["05"], ["15"], ["26"], ["38"], ["50"]],
    22: [["00", "犬"], ["13"], ["24"], ["37"], ["50", "岩"]],
    23: [["00"], ["12"], ["24"], ["40"], ["55"]],
    0: [["06", "浄"]],
    1: [],
    2: [],
    3: [],
};
// 下り 平日 (WEEKDAY)
var downWeekday = {
    6: [
        ["01", "豊"],
        ["13", "豊"],
        ["25", "豊"],
        ["37", "豊"],
        ["47", "豊"],
        ["58", "豊"],
    ],
    7: [
        ["09", "豊"],
        ["17", "豊"],
        ["25", "豊"],
        ["34", "豊"],
        ["43", "豊"],
        ["50"],
        ["55", "豊"],
    ],
    8: [
        ["00"],
        ["05", "豊"],
        ["09"],
        ["14"],
        ["19", "豊"],
        ["24"],
        ["28", "豊"],
        ["32", "豊"],
        ["36", "豊"],
        ["41", "豊"],
        ["45", "豊"],
        ["50"],
        ["54"],
        ["59", "豊"],
    ],
    9: [
        ["03"],
        ["08"],
        ["13", "豊"],
        ["17"],
        ["22"],
        ["26"],
        ["31"],
        ["35"],
        ["40"],
        ["44"],
        ["49"],
        ["54"],
        ["58"],
    ],
    10: [
        ["02"],
        ["07"],
        ["11", "豊"],
        ["16"],
        ["20"],
        ["25"],
        ["30"],
        ["35"],
        ["41"],
        ["46"],
        ["54"],
    ],
    11: [
        ["02"],
        ["10", "豊"],
        ["18"],
        ["26", "豊"],
        ["33"],
        ["43", "豊"],
        ["53"],
    ],
    12: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53"]],
    13: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53"]],
    14: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53"]],
    15: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53"]],
    16: [
        ["03"],
        ["12"],
        ["19", "豊"],
        ["27"],
        ["34", "豊"],
        ["42"],
        ["49", "豊"],
        ["56", "豊"],
    ],
    17: [
        ["02"],
        ["08"],
        ["14", "豊"],
        ["20"],
        ["26", "豊"],
        ["32"],
        ["38"],
        ["44", "豊"],
        ["50"],
        ["56", "豊"],
    ],
    18: [
        ["02"],
        ["08"],
        ["14", "豊"],
        ["20"],
        ["26", "豊"],
        ["32"],
        ["38", "豊"],
        ["44"],
        ["50", "豊"],
        ["56", "豊"],
    ],
    19: [
        ["02", "豊"],
        ["08", "豊"],
        ["14", "豊"],
        ["20", "豊"],
        ["26", "豊"],
        ["32", "豊"],
        ["38", "豊"],
        ["44", "豊"],
        ["50", "豊"],
        ["56", "豊"],
    ],
    20: [
        ["02"],
        ["08"],
        ["14", "豊"],
        ["20"],
        ["27", "豊"],
        ["35", "豊"],
        ["43", "豊"],
        ["50", "豊"],
        ["58", "豊"],
    ],
    21: [
        ["06"],
        ["14", "豊"],
        ["23", "豊"],
        ["33", "豊"],
        ["43", "豊"],
        ["53", "豊"],
    ],
    22: [["03"], ["13", "豊"], ["24"], ["35", "豊"], ["47", "豊"], ["59", "豊"]],
    23: [["11", "豊"], ["22"], ["34"], ["45", "豊"], ["58", "豊"]],
    0: [["11"], ["22"]],
};
// 下り 土日祝 (HOLIDAY)
var downHoliday = {
    6: [["01", "豊"], ["13", "豊"], ["24"], ["36", "豊"], ["47", "豊"], ["58"]],
    7: [
        ["07", "豊"],
        ["17", "豊"],
        ["28", "豊"],
        ["38", "豊"],
        ["48", "豊"],
        ["58", "豊"],
    ],
    8: [
        ["08", "豊"],
        ["16"],
        ["25", "豊"],
        ["34", "豊"],
        ["41", "豊"],
        ["49", "豊"],
        ["56", "豊"],
    ],
    9: [
        ["04"],
        ["11", "豊"],
        ["19", "豊"],
        ["27", "豊"],
        ["34", "豊"],
        ["41", "豊"],
        ["48", "豊"],
        ["56", "豊"],
    ],
    10: [
        ["03"],
        ["11", "豊"],
        ["18"],
        ["26", "豊"],
        ["33"],
        ["43", "豊"],
        ["53", "豊"],
    ],
    11: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    12: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    13: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    14: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    15: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    16: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    17: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    18: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    19: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    20: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    21: [["03"], ["13", "豊"], ["23"], ["33"], ["43", "豊"], ["53", "豊"]],
    22: [["03"], ["13", "豊"], ["24"], ["36"], ["47", "豊"], ["59", "豊"]],
    23: [["11"], ["22", "豊"], ["34"], ["45", "豊"], ["58"]],
    0: [["11"], ["22"]],
};
// 実際のシード投入用データを一気に作る
var seedData = __spreadArray(__spreadArray(__spreadArray(__spreadArray([], generateDepartures("WEEKDAY", "UP", upWeekday), true), generateDepartures("HOLIDAY", "UP", upHoliday), true), generateDepartures("WEEKDAY", "DOWN", downWeekday), true), generateDepartures("HOLIDAY", "DOWN", downHoliday), true);
function main() {
    return __awaiter(this, void 0, void 0, function () {
        var e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, prisma.departure.createMany({ data: seedData, skipDuplicates: true })];
                case 1:
                    _a.sent();
                    console.log(seedData);
                    return [3 /*break*/, 3];
                case 2:
                    e_1 = _a.sent();
                    console.error(e_1);
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    });
}
main();
